<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>navigator_creat</title>
    <url>/2020/02/14/navigator-creat/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>PyQt5-百度迁徙数据爬取</title>
    <url>/2020/02/13/bdqx/</url>
    <content><![CDATA[<blockquote>
<p>记录迁徙数据爬取，Pyqt5表格制作的笔记</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200217174141719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="bdqx"></p>
<a id="more"></a>

<blockquote>
<p>代码记录</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, json, sys, time, html, re</span><br><span class="line"><span class="keyword">from</span> jsonpath <span class="keyword">import</span> jsonpath</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PyQt5.uic <span class="keyword">import</span> loadUi</span><br><span class="line"><span class="keyword">import</span> arrow</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isLeapYear</span><span class="params">(years)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    通过判断闰年，获取年份years下一年的总天数</span></span><br><span class="line"><span class="string">    :param years: 年份，int</span></span><br><span class="line"><span class="string">    :return:days_sum，一年的总天数</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="comment"># 断言：年份不为整数时，抛出异常。</span></span><br><span class="line">    <span class="keyword">assert</span> isinstance(years, int), <span class="string">"请输入整数年，如 2018"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((years % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> years % <span class="number">100</span> != <span class="number">0</span>) <span class="keyword">or</span> (years % <span class="number">400</span> == <span class="number">0</span>)):  <span class="comment"># 判断是否是闰年</span></span><br><span class="line">        <span class="comment"># print(years, "是闰年")</span></span><br><span class="line">        days_sum = <span class="number">366</span></span><br><span class="line">        <span class="keyword">return</span> days_sum</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># print(years, '不是闰年')</span></span><br><span class="line">        days_sum = <span class="number">365</span></span><br><span class="line">        <span class="keyword">return</span> days_sum</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getAllDayPerYear</span><span class="params">(years)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    获取一年的所有日期</span></span><br><span class="line"><span class="string">    :param years:年份</span></span><br><span class="line"><span class="string">    :return:全部日期列表</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    start_date = <span class="string">'%s-1-1'</span> % years</span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    all_date_list = []</span><br><span class="line">    days_sum = isLeapYear(int(years))</span><br><span class="line">    print()</span><br><span class="line">    <span class="keyword">while</span> a &lt; days_sum:</span><br><span class="line">        b = arrow.get(start_date).shift(days=a).format(<span class="string">"YYYY-MM-DD"</span>)</span><br><span class="line">        a += <span class="number">1</span></span><br><span class="line">        all_date_list.append(b)</span><br><span class="line">    <span class="comment"># print(all_date_list)</span></span><br><span class="line">    <span class="keyword">return</span> all_date_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainWindow</span><span class="params">(QMainWindow)</span>:</span></span><br><span class="line">    <span class="comment"># 在主线程中设置自定义的信号 这里主要是给子线程发送信号</span></span><br><span class="line">    signal_m = pyqtSignal()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        super(MainWindow, self).__init__(*args, **kwargs)</span><br><span class="line">        self.ui = loadUi(<span class="string">'bd.ui'</span>)  <span class="comment"># 之后控件都在ui下使用</span></span><br><span class="line">        <span class="comment"># 自适应表格宽度</span></span><br><span class="line">        self.ui.tableWidget.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)</span><br><span class="line">        <span class="comment"># self.ui.tableWidget.horizontalHeader().setSectionResizeMode(3, QHeaderView.ResizeToContents)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 设置窗口标题为启动时间</span></span><br><span class="line">        self.ui.setWindowTitle(<span class="string">'百度迁徙 启动时间:'</span> + str(time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime())) + <span class="string">' by:包子'</span>)</span><br><span class="line">        <span class="comment"># 设置透明度 # 0到1，1表示不透明，0表示完全透明</span></span><br><span class="line">        self.ui.setWindowOpacity(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        self.initUi()</span><br><span class="line">        <span class="comment"># # 设置窗口背景色</span></span><br><span class="line">        <span class="comment"># self.ui.setStyleSheet("background-color: white")</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUi</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 获取本年的所有日期</span></span><br><span class="line">        self.t = time.strftime(<span class="string">'%Y'</span>, time.localtime(time.time()))</span><br><span class="line">        self.t_1 = time.strftime(<span class="string">'%Y-%m-%d'</span>, time.localtime(time.time()))</span><br><span class="line">        self._date_time = getAllDayPerYear(self.t)</span><br><span class="line"></span><br><span class="line">        t_ = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> self._date_time:</span><br><span class="line">            <span class="keyword">if</span> self.t_1 == i:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            t_.append(i)</span><br><span class="line">        t_.reverse()</span><br><span class="line">        self.ui.date_comb.addItems(t_)</span><br><span class="line"></span><br><span class="line">        city_id = <span class="string">"北京|110000,天津|120000,兴安盟|152200,巢湖|340181,定安|469021,屯昌|469022,澄迈|469023,临高|469024,海东地区|630200,"</span> \</span><br><span class="line">                  <span class="string">"香港|810000,澳门|820000,昌都|540300,昌都地区|540300,山南|540500,山南地区|540500,日喀则|540200,日喀则地区|540200,那曲|540600,"</span> \</span><br><span class="line">                  <span class="string">"那曲地区|540600,林芝|540400,林芝地区|540400,吐鲁番|650400,吐鲁番地区|650400,铜仁|520600,铜仁地区|520600,毕节|520500,"</span> \</span><br><span class="line">                  <span class="string">"毕节地区|520500,广西|450000,广西壮族自治区|450000,内蒙古|150000,内蒙古自治区|150000,宁夏|640000,宁夏回族自治区|640000,新疆|650000,"</span> \</span><br><span class="line">                  <span class="string">"新疆维吾尔自治区|650000,西藏|540000,西藏自治区|540000,石家庄|130100,唐山|130200,秦皇岛|130300,邯郸|130400,邢台|130500,"</span> \</span><br><span class="line">                  <span class="string">"保定|130600,张家口|130700,承德|130800,沧州|130900,廊坊|131000,衡水|131100,太原|140100,大同|140200,阳泉|140300,"</span> \</span><br><span class="line">                  <span class="string">"长治|140400,晋城|140500,朔州|140600,晋中|140700,运城|140800,忻州|140900,临汾|141000,吕梁|141100,呼和浩特|150100,"</span> \</span><br><span class="line">                  <span class="string">"包头|150200,乌海|150300,赤峰|150400,通辽|150500,鄂尔多斯|150600,呼伦贝尔|150700,巴彦淖尔|150800,乌兰察布|150900,沈阳|210100,"</span> \</span><br><span class="line">                  <span class="string">"大连|210200,鞍山|210300,抚顺|210400,本溪|210500,丹东|210600,锦州|210700,营口|210800,阜新|210900,辽阳|211000,"</span> \</span><br><span class="line">                  <span class="string">"盘锦|211100,铁岭|211200,朝阳|211300,葫芦岛|211400,长春|220100,吉林市|220200,四平|220300,辽源|220400,通化|220500,"</span> \</span><br><span class="line">                  <span class="string">"白山|220600,松原|220700,白城|220800,哈尔滨|230100,齐齐哈尔|230200,鸡西|230300,鹤岗|230400,双鸭山|230500,大庆|230600,"</span> \</span><br><span class="line">                  <span class="string">"伊春|230700,佳木斯|230800,七台河|230900,牡丹江|231000,黑河|231100,绥化|231200,上海|310000,南京|320100,无锡|320200,"</span> \</span><br><span class="line">                  <span class="string">"徐州|320300,常州|320400,苏州|320500,南通|320600,连云港|320700,淮安|320800,盐城|320900,扬州|321000,镇江|321100,"</span> \</span><br><span class="line">                  <span class="string">"泰州|321200,宿迁|321300,浙江|330000,杭州|330100,宁波|330200,温州|330300,嘉兴|330400,湖州|330500,绍兴|330600,"</span> \</span><br><span class="line">                  <span class="string">"金华|330700,衢州|330800,舟山|330900,台州|331000,丽水|331100,合肥|340100,芜湖|340200,蚌埠|340300,淮南|340400,"</span> \</span><br><span class="line">                  <span class="string">"马鞍山|340500,淮北|340600,铜陵|340700,安庆|340800,黄山|341000,滁州|341100,阜阳|341200,宿州|341300,六安|341500,"</span> \</span><br><span class="line">                  <span class="string">"亳州|341600,池州|341700,宣城|341800,福州|350100,厦门|350200,莆田|350300,三明|350400,泉州|350500,漳州|350600,"</span> \</span><br><span class="line">                  <span class="string">"南平|350700,龙岩|350800,宁德|350900,南昌|360100,景德镇|360200,萍乡|360300,九江|360400,新余|360500,鹰潭|360600,"</span> \</span><br><span class="line">                  <span class="string">"赣州|360700,吉安|360800,宜春|360900,抚州|361000,上饶|361100,济南|370100,莱芜|370100,青岛|370200,淄博|370300,"</span> \</span><br><span class="line">                  <span class="string">"枣庄|370400,东营|370500,烟台|370600,潍坊|370700,济宁|370800,泰安|370900,威海|371000,日照|371100,临沂|371300,"</span> \</span><br><span class="line">                  <span class="string">"德州|371400,聊城|371500,滨州|371600,菏泽|371700,郑州|410100,开封|410200,洛阳|410300,平顶山|410400,安阳|410500,"</span> \</span><br><span class="line">                  <span class="string">"鹤壁|410600,新乡|410700,焦作|410800,濮阳|410900,许昌|411000,漯河|411100,三门峡|411200,南阳|411300,商丘|411400,"</span> \</span><br><span class="line">                  <span class="string">"信阳|411500,周口|411600,驻马店|411700,武汉|420100,黄石|420200,十堰|420300,宜昌|420500,襄阳|420600,鄂州|420700,"</span> \</span><br><span class="line">                  <span class="string">"荆门|420800,孝感|420900,荆州|421000,黄冈|421100,咸宁|421200,随州|421300,仙桃|429004,潜江|429005,天门|429006,"</span> \</span><br><span class="line">                  <span class="string">"长沙|430100,株洲|430200,湘潭|430300,衡阳|430400,邵阳|430500,岳阳|430600,常德|430700,张家界|430800,益阳|430900,"</span> \</span><br><span class="line">                  <span class="string">"郴州|431000,永州|431100,怀化|431200,娄底|431300,广州|440100,韶关|440200,深圳|440300,珠海|440400,汕头|440500,"</span> \</span><br><span class="line">                  <span class="string">"佛山|440600,江门|440700,湛江|440800,茂名|440900,肇庆|441200,惠州|441300,梅州|441400,汕尾|441500,河源|441600,"</span> \</span><br><span class="line">                  <span class="string">"阳江|441700,清远|441800,东莞|441900,济源|419001,中山|442000,潮州|445100,揭阳|445200,云浮|445300,南宁|450100,"</span> \</span><br><span class="line">                  <span class="string">"柳州|450200,桂林|450300,梧州|450400,北海|450500,防城港|450600,钦州|450700,贵港|450800,玉林|450900,百色|451000,"</span> \</span><br><span class="line">                  <span class="string">"贺州|451100,河池|451200,来宾|451300,崇左|451400,海口|460100,三亚|460200,三亚|460300,五指山|469001,琼海|469002,"</span> \</span><br><span class="line">                  <span class="string">"儋州|460400,文昌|469005,万宁|469006,东方|469007,重庆|500000,成都|510100,自贡|510300,攀枝花|510400,泸州|510500,"</span> \</span><br><span class="line">                  <span class="string">"德阳|510600,绵阳|510700,广元|510800,遂宁|510900,内江|511000,乐山|511100,南充|511300,眉山|511400,宜宾|511500,"</span> \</span><br><span class="line">                  <span class="string">"广安|511600,达州|511700,雅安|511800,巴中|511900,资阳|512000,贵阳|520100,六盘水|520200,遵义|520300,安顺|520400,"</span> \</span><br><span class="line">                  <span class="string">"昆明|530100,曲靖|530300,玉溪|530400,保山|530500,昭通|530600,丽江|530700,临沧|530900,普洱|530800,拉萨|540100,"</span> \</span><br><span class="line">                  <span class="string">"西安|610100,铜川|610200,宝鸡|610300,咸阳|610400,渭南|610500,延安|610600,汉中|610700,榆林|610800,安康|610900,"</span> \</span><br><span class="line">                  <span class="string">"商洛|611000,兰州|620100,嘉峪关|620200,金昌|620300,白银|620400,天水|620500,武威|620600,张掖|620700,平凉|620800,"</span> \</span><br><span class="line">                  <span class="string">"酒泉|620900,庆阳|621000,定西|621100,陇南|621200,西宁|630100,银川|640100,石嘴山|640200,吴忠|640300,固原|640400,"</span> \</span><br><span class="line">                  <span class="string">"中卫|640500,乌鲁木齐|650100,克拉玛依|650200,石河子|659001,阿拉尔|659002,图木舒克|659003,五家渠|659004,北屯|659005,"</span> \</span><br><span class="line">                  <span class="string">"铁门关|659006,双河|659007,可克达拉|659008,昆玉|659009,恩施|422800,恩施土家族苗族自治州|422800,延边|222400,延边朝鲜族自治州|222400,"</span> \</span><br><span class="line">                  <span class="string">"神农架地区|429021,神农架林区|429021,湘西州|433100,湘西土家族苗族自治州|433100,大兴安岭地区|232700,白沙县|469025,白沙黎族自治县|469025,"</span> \</span><br><span class="line">                  <span class="string">"昌江黎族自治县|469026,乐东黎族自治县|469027,陵水黎族自治县|469028,保亭黎族苗族自治县|469029,琼中黎族苗族自治县|469030,阿坝州|513200,"</span> \</span><br><span class="line">                  <span class="string">"阿坝藏族羌族自治州|513200,甘孜州|513300,甘孜藏族自治州|513300,凉山州|513400,凉山彝族自治州|513400,黔西南布依族苗族自治州|522300,"</span> \</span><br><span class="line">                  <span class="string">"黔东南苗族侗族自治州|522600,黔南布依族苗族自治州|522700,楚雄州|532300,楚雄彝族自治州|532300,红河州|532500,红河哈尼族彝族自治州|532500,"</span> \</span><br><span class="line">                  <span class="string">"文山|532600,文山壮族苗族自治州|532600,西双版纳傣族自治州|532800,大理州|532900,大理白族自治州|532900,德宏州|533100,"</span> \</span><br><span class="line">                  <span class="string">"德宏傣族景颇族自治州|533100,怒江州|533300,怒江傈僳族自治州|533300,迪庆州|533400,迪庆藏族自治州|533400,阿里地区|542500,临夏州|622900,"</span> \</span><br><span class="line">                  <span class="string">"临夏回族自治州|622900,甘南州|623000,甘南藏族自治州|623000,海北州|632200,海北藏族自治州|632200,黄南州|632300,黄南藏族自治州|632300,"</span> \</span><br><span class="line">                  <span class="string">"海南州|632500,海南藏族自治州|632500,果洛州|632600,果洛藏族自治州|632600,玉树州|632700,玉树藏族自治州|632700,海西州|632800,"</span> \</span><br><span class="line">                  <span class="string">"海西蒙古族藏族自治州|632800,昌吉州|652300,昌吉回族自治州|652300,博尔塔拉州|652700,博尔塔拉蒙古自治州|652700,巴音郭楞蒙古自治州|652800,"</span> \</span><br><span class="line">                  <span class="string">"哈密|650500,哈密地区|650500,阿克苏地区|652900,克孜勒苏州|653000,克孜勒苏柯尔克孜自治州|653000,伊犁州|654000,伊犁哈萨克自治州|654000,"</span> \</span><br><span class="line">                  <span class="string">"喀什地区|653100,和田地区|653200,塔城地区|654200,阿勒泰地区|654300,锡林郭勒盟|152500,阿拉善盟|152900,安徽|340000,福建|350000,"</span> \</span><br><span class="line">                  <span class="string">"甘肃|620000,广东|440000,贵州|520000,海南|460000,河北|130000,黑龙江|230000,河南|410000,湖北|420000,湖南|430000,"</span> \</span><br><span class="line">                  <span class="string">"江苏|320000,江西|360000,吉林|220000,辽宁|210000,青海|630000,山东|370000,山西|140000,陕西|610000,四川|510000,云南|530000 "</span></span><br><span class="line"></span><br><span class="line">        c_id = city_id.split(<span class="string">','</span>)</span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        c_id.reverse()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> c_id:</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            c = i.strip().split(<span class="string">'|'</span>)</span><br><span class="line">            city = c[<span class="number">0</span>].strip()  <span class="comment"># 城市</span></span><br><span class="line">            city_id = c[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 插入数据钱先插入一行表格</span></span><br><span class="line">            self.ui.tableWidget.insertRow(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 城市</span></span><br><span class="line">            newItem_cyti = QTableWidgetItem(city)</span><br><span class="line">            self.ui.tableWidget.setItem(<span class="number">0</span>, <span class="number">0</span>, newItem_cyti)</span><br><span class="line">            <span class="comment"># id</span></span><br><span class="line">            newItem_id = QTableWidgetItem(city_id)</span><br><span class="line">            self.ui.tableWidget.setItem(<span class="number">0</span>, <span class="number">1</span>, newItem_id)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 线程Qtimer</span></span><br><span class="line">            self.timer = QTimer()</span><br><span class="line">            self.timer.timeout.connect(self.get_qr)</span><br><span class="line">            <span class="comment"># 加入选项</span></span><br><span class="line">            self.b1 = QPushButton(<span class="string">'获取迁徙数据'</span>)</span><br><span class="line">            self.ui.tableWidget.setCellWidget(<span class="number">0</span>, <span class="number">2</span>, self.b1)</span><br><span class="line">            self.b1.clicked.connect(self.timing)</span><br><span class="line"></span><br><span class="line">            self.ui.btn.clicked.connect(self.find_tab)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查找表格</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_tab</span><span class="params">(self)</span>:</span></span><br><span class="line">        text = self.ui.lineEdit.text()</span><br><span class="line">        items = self.ui.tableWidget.findItems(text, Qt.MatchExactly)</span><br><span class="line">        item = items[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 选中单元格</span></span><br><span class="line">        item.setSelected(<span class="literal">True</span>)</span><br><span class="line">        row = item.row()</span><br><span class="line">        <span class="comment"># 通过鼠标滚轮定位，快速定位到第十一行</span></span><br><span class="line">        self.ui.tableWidget.verticalScrollBar().setSliderPosition(row)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定时器</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">timing</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.timer.start(<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 迁入</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_qr</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.ui.city_qr.clear()</span><br><span class="line">        self.ui.city_qc.clear()</span><br><span class="line"></span><br><span class="line">        index_ = self.ui.tableWidget.currentRow()  <span class="comment"># 获取当前列表行索引</span></span><br><span class="line">        id = self.ui.tableWidget.item(index_, <span class="number">1</span>).text()  <span class="comment"># 获取id</span></span><br><span class="line">        tmp = self.ui.date_comb.currentText()  <span class="comment"># 获取下拉框日期</span></span><br><span class="line">        <span class="comment"># 迁入 迁出请求</span></span><br><span class="line">        url_qr = <span class="string">f'http://huiyan.baidu.com/migration/cityrank.jsonp?dt=city&amp;id=<span class="subst">&#123;id&#125;</span>&amp;type=move_in&amp;date=<span class="subst">&#123;str(tmp).replace(<span class="string">"-"</span>, <span class="string">""</span>)&#125;</span>'</span></span><br><span class="line">        url_qc = <span class="string">f'http://huiyan.baidu.com/migration/cityrank.jsonp?dt=city&amp;id=<span class="subst">&#123;id&#125;</span>&amp;type=move_out&amp;date=<span class="subst">&#123;str(tmp).replace(<span class="string">"-"</span>, <span class="string">""</span>)&#125;</span>'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 迁入内容</span></span><br><span class="line">        <span class="comment"># header1 = &#123;'user-agent': UserAgent().chrome&#125;</span></span><br><span class="line">        b_qr = html.unescape(requests.get(url_qr))</span><br><span class="line">        data_qr = json.loads(re.findall(<span class="string">'\((.*?)\)'</span>, b_qr.text)[<span class="number">0</span>])</span><br><span class="line">        qr_city = jsonpath(data_qr, <span class="string">'$..city_name'</span>)  <span class="comment"># 城市</span></span><br><span class="line">        qr_province = jsonpath(data_qr, <span class="string">'$..province_name'</span>)  <span class="comment"># 省</span></span><br><span class="line">        qr_bl = jsonpath(data_qr, <span class="string">'$..value'</span>)  <span class="comment"># 比例</span></span><br><span class="line">        qr = []</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">for</span> c, p, b <span class="keyword">in</span> zip(qr_province, qr_city, qr_bl):</span><br><span class="line">                val = <span class="string">f'<span class="subst">&#123;c&#125;</span>    <span class="subst">&#123;p&#125;</span>    比例:<span class="subst">&#123;b&#125;</span>%'</span></span><br><span class="line">                qr.append(val)</span><br><span class="line">            self.ui.city_qr.addItems(qr)  <span class="comment"># 加入迁入地列表</span></span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            self.ui.city_qr.addItems([<span class="string">'啥也没获取到'</span>])  <span class="comment"># 加入迁入地列表</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 迁出内容</span></span><br><span class="line">        <span class="comment"># header2 = &#123;'user-agent': UserAgent().chrome&#125;</span></span><br><span class="line"></span><br><span class="line">        b_qc = html.unescape(requests.get(url_qc))</span><br><span class="line"></span><br><span class="line">        data_qc = json.loads(re.findall(<span class="string">'\((.*?)\)'</span>, b_qc.text)[<span class="number">0</span>])</span><br><span class="line">        qc_city = jsonpath(data_qc, <span class="string">'$..city_name'</span>)  <span class="comment"># 城市</span></span><br><span class="line">        qc_province = jsonpath(data_qc, <span class="string">'$..province_name'</span>)  <span class="comment"># 省</span></span><br><span class="line">        qc_bl = jsonpath(data_qc, <span class="string">'$..value'</span>)  <span class="comment"># 比例</span></span><br><span class="line">        qc = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">for</span> c, p, b <span class="keyword">in</span> zip(qc_province, qc_city, qc_bl):</span><br><span class="line">                val = <span class="string">f'<span class="subst">&#123;c&#125;</span>    <span class="subst">&#123;p&#125;</span>    比例:<span class="subst">&#123;b&#125;</span>%'</span></span><br><span class="line">                qc.append(val)</span><br><span class="line">            self.ui.city_qc.addItems(qc)  <span class="comment"># 加入迁出地</span></span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            self.ui.city_qc.addItems([<span class="string">'没获取到 - -'</span>])</span><br><span class="line">        self.timer.stop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    stats = MainWindow()  <span class="comment"># 调用show方法 打开窗口</span></span><br><span class="line">    stats.ui.show()</span><br><span class="line">    sys.exit(app.exec_())  <span class="comment"># 调用sys库的exit退出方法，条件是app.exec_()也就是整个窗口关闭</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>pyqt5</category>
      </categories>
      <tags>
        <tag>百度迁徙</tag>
      </tags>
  </entry>
  <entry>
    <title>JS 快速定位</title>
    <url>/2020/02/05/Js-reverse/</url>
    <content><![CDATA[<blockquote>
<p>常用的定位方法与hook脚本</p>
</blockquote>
<a id="more"></a>
<h2 id="快速定位之搜索"><a href="#快速定位之搜索" class="headerlink" title="快速定位之搜索"></a>快速定位之搜索</h2><ul>
<li>中间人的全局搜索(fiddle有个放大镜 搜索 可以搜索 到目标字符串 )</li>
<li>开发者工具的全局搜索(dom搜索和全局搜索，可以搜索html和js)</li>
</ul>
<h2 id="快速定位之断点"><a href="#快速定位之断点" class="headerlink" title="快速定位之断点"></a>快速定位之断点</h2><ul>
<li>自定义特定的断点  寻找到关键位置打上断点</li>
<li>dom断点 页面元素绑定了事件</li>
<li>xhr断点，比如登录，搜索框</li>
<li>event断点  比如鼠标点击</li>
</ul>
<h2 id="快速定位之hook"><a href="#快速定位之hook" class="headerlink" title="快速定位之hook"></a>快速定位之hook</h2><ul>
<li>json</li>
<li>cookie</li>
<li>window attr </li>
<li>eval/Function</li>
<li>websocket</li>
<li>and so on</li>
</ul>
<p>json hook</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> my_stringify = <span class="built_in">JSON</span>.stringify;</span><br><span class="line"><span class="built_in">JSON</span>.stringify = <span class="function"><span class="keyword">function</span> (<span class="params">params</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//这里可以添加其他逻辑比如 debugger</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"json_stringify params:"</span>,params);</span><br><span class="line">    <span class="keyword">return</span> my_stringify(params);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> my_parse = <span class="built_in">JSON</span>.parse;</span><br><span class="line"><span class="built_in">JSON</span>.parse = <span class="function"><span class="keyword">function</span> (<span class="params">params</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//这里可以添加其他逻辑比如 debugger</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"json_parse params:"</span>,params);</span><br><span class="line">    <span class="keyword">return</span> my_parse(params);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>cookies hook</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> cookie_cache = <span class="built_in">document</span>.cookie;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(<span class="built_in">document</span>, <span class="string">'cookie'</span>, &#123;</span><br><span class="line">    <span class="keyword">get</span>: function() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Getting cookie'</span>);</span><br><span class="line">        <span class="keyword">return</span> cookie_cache;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span>: function(val) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Seting cookie"</span>,val);</span><br><span class="line">        <span class="keyword">var</span> cookie = val.split(<span class="string">";"</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> ncookie = cookie.split(<span class="string">"="</span>);</span><br><span class="line">        <span class="keyword">var</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">var</span> cache = cookie_cache.split(<span class="string">"; "</span>);</span><br><span class="line">        cache = cache.map(<span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (a.split(<span class="string">"="</span>)[<span class="number">0</span>] === ncookie[<span class="number">0</span>])&#123;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">return</span> cookie;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>window attr</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义hook属性</span></span><br><span class="line"><span class="keyword">var</span> window_flag_1 = <span class="string">"_t"</span>;</span><br><span class="line"><span class="keyword">var</span> window_flag_2 = <span class="string">"ccc"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> key_value_map = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> window_value = <span class="built_in">window</span>[window_flag_1];</span><br><span class="line"></span><br><span class="line"><span class="comment">// hook</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(<span class="built_in">window</span>, window_flag_1, &#123;</span><br><span class="line">    <span class="keyword">get</span>: function()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Getting"</span>,<span class="built_in">window</span>,window_flag_1,<span class="string">"="</span>,window_value);</span><br><span class="line">        <span class="comment">//debugger</span></span><br><span class="line">        <span class="keyword">return</span> window_value</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span>: function(val) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Setting"</span>,<span class="built_in">window</span>, window_flag_1, <span class="string">"="</span>,val);</span><br><span class="line">        <span class="comment">//debugger</span></span><br><span class="line">        window_value = val;</span><br><span class="line">        key_value_map[<span class="built_in">window</span>[window_flag_1]] = window_flag_1;</span><br><span class="line">        set_obj_attr(<span class="built_in">window</span>[window_flag_1],window_flag_2);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_obj_attr</span>(<span class="params">obj,attr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> obj_attr_value = obj[attr];</span><br><span class="line">    <span class="built_in">Object</span>.defineProperty(obj,attr, &#123;</span><br><span class="line">        <span class="keyword">get</span>: function() &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"Getting"</span>, key_value_map[obj],attr, <span class="string">"="</span>, obj_attr_value);</span><br><span class="line">            <span class="comment">//debugger</span></span><br><span class="line">            <span class="keyword">return</span> obj_attr_value;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">set</span>: function(val)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"Setting"</span>, key_value_map[obj], attr, <span class="string">"="</span>, val);</span><br><span class="line">            <span class="comment">//debugger</span></span><br><span class="line">            obj_attr_value = val;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>eval/Function</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.__cr_eval = <span class="built_in">window</span>.eval;</span><br><span class="line"><span class="keyword">var</span> myeval = <span class="function"><span class="keyword">function</span>(<span class="params">src</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(src);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"========= eval end ==========="</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">window</span>.__cr_eval;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _myeval = myeval.bind(<span class="literal">null</span>);</span><br><span class="line">_myeval.toString = <span class="built_in">window</span>.__cr_eval.toString;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(<span class="built_in">window</span>, <span class="string">'eval'</span>,&#123;<span class="attr">value</span>: _myeval&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>._cr_fun = <span class="built_in">window</span>.Function</span><br><span class="line"><span class="keyword">var</span> myfun = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> args = <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>, <span class="number">0</span>, <span class="number">-1</span>).join(<span class="string">","</span>), src = <span class="built_in">arguments</span>[<span class="built_in">arguments</span>.lenght <span class="number">-1</span>];</span><br><span class="line">    <span class="built_in">console</span>.log(src);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"======== Function end ============="</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">window</span>._cr_fun.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">myfun.toString = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="keyword">return</span> <span class="built_in">window</span>._cr_fun + <span class="string">""</span>&#125; <span class="comment">//小花招，这里防止代码里检测原生函数</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(<span class="built_in">window</span>, <span class="string">"Function"</span>,&#123;<span class="attr">value</span>: myfun&#125;)</span><br></pre></td></tr></table></figure>
<p>websocket hook</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 1、webcoket 一般都是json数据格式传输，那么发生之前需要JSON.stringify  </span></span><br><span class="line"><span class="keyword">var</span> my_stringify = <span class="built_in">JSON</span>.stringify;</span><br><span class="line"><span class="built_in">JSON</span>.stringify = <span class="function"><span class="keyword">function</span> (<span class="params">params</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//这里可以添加其他逻辑比如 debugger</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"json_stringify params:"</span>,params);</span><br><span class="line">    <span class="keyword">return</span> my_stringify(params);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> my_parse = <span class="built_in">JSON</span>.parse;</span><br><span class="line"><span class="built_in">JSON</span>.parse = <span class="function"><span class="keyword">function</span> (<span class="params">params</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//这里可以添加其他逻辑比如 debugger</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"json_parse params:"</span>,params);</span><br><span class="line">    <span class="keyword">return</span> my_parse(params);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2  webScoket 绑定在windows对象，上，根据浏览器的不同，websokcet名字可能不一样 </span></span><br><span class="line"><span class="comment">//chrome window.WebSocket  firfox window.MozWebSocket;</span></span><br><span class="line"><span class="built_in">window</span>._WebSocket = <span class="built_in">window</span>.WebSocket;</span><br><span class="line"></span><br><span class="line"><span class="comment">// hook send</span></span><br><span class="line"><span class="built_in">window</span>._WebSocket.prototype.send = <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.info(<span class="string">"Hook WebSocket"</span>, data);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.send(data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(<span class="built_in">window</span>, <span class="string">"WebSocket"</span>,&#123;<span class="attr">value</span>: WebSocket&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="快速定位之分析"><a href="#快速定位之分析" class="headerlink" title="快速定位之分析"></a>快速定位之分析</h2><ol>
<li>Element Event Listeners 查看dom元素绑定的事件</li>
<li>Network type initator 查看请求发送事执行的调用栈</li>
<li>Console Log XMLHttpRequest 勾选更多的监控日志</li>
</ol>
<h2 id="快速定位之注入"><a href="#快速定位之注入" class="headerlink" title="快速定位之注入"></a>快速定位之注入</h2><ol>
<li>谷歌浏览器 安装油猴插件 编写脚本</li>
<li>中间人代理</li>
<li>浏览器开发者工具打上scrapt断点，在console写入注入脚本</li>
</ol>
<p>注意注入时机<br><span class="exturl" data-url="aHR0cHM6Ly93d3cudGFtcGVybW9ua2V5Lm5ldC9kb2N1bWVudGF0aW9uLnBocD9leHQ9ZGhkZyNfcnVuX2F0" title="https://www.tampermonkey.net/documentation.php?ext=dhdg#_run_at">https://www.tampermonkey.net/documentation.php?ext=dhdg#_run_at<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>js逆向</category>
      </categories>
      <tags>
        <tag>快速定位</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫解决重定向与中文乱码</title>
    <url>/2020/01/13/requests-302/</url>
    <content><![CDATA[<blockquote>
<p>今天发现有位网友遇到请求重定向的问题,帮忙解决之后又碰到中文乱码！再此做个记录以便日后查阅.</p>
</blockquote>
<a id="more"></a>

<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul>
<li>访问网址后获取302跳转的链接  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">url =  https://kgbook.com/e/DownSys/GetDown/?classid=21&amp;id=4702&amp;pathid=0</span><br></pre></td></tr></table></figure></li>
<li>需要提取Response Headers中location值(跳转地址)<br><img src="https://img-blog.csdnimg.cn/20200113013829770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="跳转地址"></li>
</ul>
<ul>
<li><p>如果用requests请求重定向的地址,在Pycharm中会出现请求不中断且不返回任何结果,此时需要在requests添加  <strong>allow_redirects=False</strong> 参数即可拒绝重定向,返回请求后的结果.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">requests.get(url,allow_redirects=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<h2 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h2></li>
<li><p>返回头headers中有中文,查看content-type值为charset=utf-8,那就知道这是utf-8编码, 我再Pycharm设置的默认编码格式就是utf-8,按理来说会正常解析，但是返回的却是乱码.. </p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">requests.get(url,allow_redirects=<span class="literal">False</span>).headers[<span class="string">'Location'</span>]</span><br></pre></td></tr></table></figure>
</li>
<li><p>返回结果为下图:</p>
<p> <img src="https://img-blog.csdnimg.cn/20200113015801867.png" alt="在这里插入图片描述"></p>
</li>
<li><p>由于我之前是直接以<strong>headers[‘Location’]</strong>获取的值,那现在就直接获取<strong>headers</strong> 不加后面的中括号内容了,在请求一次</p>
 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">requests.get(url,allow_redirects=<span class="literal">False</span>).headers</span><br></pre></td></tr></table></figure>
</li>
<li><p>返回结果为下图:</p>
<p> <img src="https://img-blog.csdnimg.cn/20200113021613268.png" alt="在这里插入图片描述"></p>
<p>这次返回的内容里，<strong>中文部分出现 \x9a\x84 此类字符</strong>,这是Unicode单字节编码(字符串的bytes形式),那么就可以先编码为unicode,在解码为utf-8</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">''</span>.encode(<span class="string">'raw_unicode_escape'</span>).decode(<span class="string">'UTF-8'</span>)</span><br></pre></td></tr></table></figure>
<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2></li>
<li><p>可直接运行</p>
 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url = <span class="string">'https://kgbook.com/e/DownSys/GetDown/?classid=21&amp;id=4702&amp;pathid=0'</span></span><br><span class="line">res = requests.get(url,allow_redirects=<span class="literal">False</span>).headers[<span class="string">'Location'</span>]</span><br><span class="line">res_decode = str(res).encode(<span class="string">'raw_unicode_escape'</span>).decode(<span class="string">'UTF-8'</span>) <span class="comment"># 解决Unicode编码</span></span><br><span class="line">print(<span class="string">f'https://kgbook.com<span class="subst">&#123;res_decode&#125;</span>'</span>)</span><br></pre></td></tr></table></figure></li>
<li><p>返回结果<br> <img src="https://img-blog.csdnimg.cn/20200113024516414.png" alt="jieguo"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Requests</tag>
        <tag>重定向_301_302解决</tag>
        <tag>中文乱码(类似)</tag>
      </tags>
  </entry>
  <entry>
    <title>Python post方法提交json数据</title>
    <url>/2020/01/11/Python-json-data/</url>
    <content><![CDATA[<blockquote>
<p>刚接触爬虫的程序员可能会遇到不会提交json数据的问题，本文以Python示例来说明如何提交。</p>
</blockquote>
<a id="more"></a>
<ul>
<li>案例网址<br><span class="exturl" data-url="aHR0cHM6Ly93d3cucmV0YWlsbWVub3QuY29tL2NvdXBvbnMvZm9vZA==" title="https://www.retailmenot.com/coupons/food">https://www.retailmenot.com/coupons/food<i class="fa fa-external-link"></i></span></li>
</ul>
<h2 id="抓包查看异步请求的地址"><a href="#抓包查看异步请求的地址" class="headerlink" title="抓包查看异步请求的地址"></a>抓包查看异步请求的地址</h2><ul>
<li><p>AJAX_URL:<span class="exturl" data-url="aHR0cHM6Ly93d3cucmV0YWlsbWVub3QuY29tL3JtbnFsLw==" title="https://www.retailmenot.com/rmnql/">https://www.retailmenot.com/rmnql/<i class="fa fa-external-link"></i></span><br>  Request_Payoad (json格式数据),看下图<br>  <img src="https://img-blog.csdnimg.cn/20200111193406440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="json数据"></p>
</li>
<li><p>返回的Response<br><img src="https://img-blog.csdnimg.cn/20200111200820330.png" alt="在这里插入图片描述"></p>
</li>
<li><p>复制原数据到Pycharm<br><img src="https://img-blog.csdnimg.cn/20200111193701905.png" alt="copy_data"></p>
<h2 id="格式化代码"><a href="#格式化代码" class="headerlink" title="格式化代码"></a>格式化代码</h2></li>
<li><p>Pycharm中默认格式化代码快捷键为Ctrl+Alt+L,但是与QQ快捷键冲突,可关闭QQ或者自行更改快捷键</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = &#123;<span class="string">"operationName"</span>:<span class="string">"loginData"</span>,<span class="string">"variables"</span>:&#123;&#125;,<span class="string">"query"</span>:<span class="string">"query loginData &#123;\n  isLoggedIn\n  authenticatedUser &#123;\n    username\n    email\n    photo\n    __typename\n  &#125;\n&#125;\n"</span>&#125;,&#123;<span class="string">"operationName"</span>:<span class="string">"getUserInfo"</span>,<span class="string">"variables"</span>:&#123;&#125;,<span class="string">"query"</span>:<span class="string">"query getUserInfo &#123;\n  authenticatedUser &#123;\n    username\n    email\n    photo\n    __typename\n  &#125;\n&#125;\n"</span>&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200111194519455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="格式化代码"></p>
<h2 id="json方式提交数据"><a href="#json方式提交数据" class="headerlink" title="json方式提交数据"></a>json方式提交数据</h2><table>
<thead>
<tr>
<th>两种方式提交数据</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>data=json.dumps(data)</code></td>
<td>使用json模块中的dumps方法转成json数据在提交</td>
</tr>
<tr>
<td><code>json=data</code></td>
<td>直接以requests的json参数提交数据</td>
</tr>
</tbody></table>
</li>
</ul>
<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on 2020年1月11日</span></span><br><span class="line"><span class="string">@author: 包子</span></span><br><span class="line"><span class="string">@site: http://www.wxiptest.com</span></span><br><span class="line"><span class="string">@email: 2775617031@qq.com</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> json, requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># pycharm格式化代码快捷键 Ctrl+Alt+L (此快捷键与QQ快捷键冲突 自行设置)</span></span><br><span class="line"><span class="comment"># 要提交的json格式数据</span></span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">           <span class="string">"operationName"</span>: <span class="string">"loginData"</span>,</span><br><span class="line">           <span class="string">"variables"</span>: &#123;&#125;,</span><br><span class="line">           <span class="string">"query"</span>: <span class="string">"query loginData &#123;\n  isLoggedIn\n  authenticatedUser &#123;\n    username\n    email\n    photo\n    __typename\n  &#125;\n&#125;\n"</span>&#125;, &#123;</span><br><span class="line">           <span class="string">"operationName"</span>: <span class="string">"getUserInfo"</span>, <span class="string">"variables"</span>: &#123;&#125;,</span><br><span class="line">           <span class="string">"query"</span>: <span class="string">"query getUserInfo &#123;\n  authenticatedUser &#123;\n    username\n    email\n    photo\n    __typename\n  &#125;\n&#125;\n"</span></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="comment"># 需携带origin 否者无法请求成功: 服务器会校验当前的请求是不是来自被允许的站点 就是通过Origin字段的值来进行的判断</span></span><br><span class="line">    <span class="string">'origin'</span>: <span class="string">'https://www.retailmenot.com'</span>,</span><br><span class="line">    <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4000.3 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可使用json=data 或 data=json.dumps(data)</span></span><br><span class="line">res = requests.post(<span class="string">'https://www.retailmenot.com/rmnql/'</span>, data=json.dumps(data), headers=headers).text</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure></li>
<li>Pycharm返回结果<br><img src="https://img-blog.csdnimg.cn/20200111200929501.png" alt="结果"></li>
</ul>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>json格式提交数据</tag>
      </tags>
  </entry>
  <entry>
    <title>Selenium永久开启Flash权限方法</title>
    <url>/2020/01/10/selenium_flash/</url>
    <content><![CDATA[<p><strong>前段时间接到一个自动化订单,需要打开直播间观看视频 看到一定时间会增长多少经验(大概就是这意思),抓包发现请求的数据以swf格式加密传输,由于对这方面没什么经验只能使用selenium操作了…，而后途中就发现了Flash权限问题，再此做个记录。</strong></p>
<a id="more"></a>
<blockquote>
<p>Flash权限需要手动开起，对自动化测试的基佬们非常不友好，之后发现可以用修改本地注册表,来实现永久性开启指定域名后缀的Flash权限。</p>
</blockquote>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ul>
<li>创建文本，后缀改为reg，填写下面内容</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Software\Policies\Google\Chrome\PluginsAllowedForUrls]</span><br><span class="line"><span class="string">"1"</span>=<span class="string">"[*.]com"</span></span><br><span class="line"><span class="string">"2"</span>=<span class="string">"[*.]cn"</span></span><br><span class="line"><span class="string">"3"</span>=<span class="string">"[*.]org"</span></span><br></pre></td></tr></table></figure>

<ul>
<li>保存后双击的打开 [有风险提示]- &gt; 确定，之后重启浏览器即可完成 。</li>
<li>在Chrome浏览器打开chrome://settings/content/flash 可以看到权限已经添加，我使用的域名后缀为 .tv<br><img src="https://img-blog.csdnimg.cn/20200110212700985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2></li>
<li>如果页面Flash播放器提示手动点击才可播放的话，用webdriver的execute_script()方法执行js操作开始播放,或者直接选择元素点击即可。</li>
</ul>
]]></content>
      <categories>
        <category>自动化测试</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Selenium</tag>
      </tags>
  </entry>
  <entry>
    <title>PyQt5-触手TV定时挂房</title>
    <url>/2020/01/09/pyqt5_cstv/</url>
    <content><![CDATA[<p><strong>先放个成品图</strong><br><img src="https://img-blog.csdnimg.cn/20200109221418652.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p><img src="https://img-blog.csdnimg.cn/20200109221443829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>使用pyqt5的好处当然就是可以用designer工具进行拖拽操,界面定制化成都非常高，需要用到的关键组件主要是webengine 引擎采用的是chromium,这中间过程坑不少… 主要就是此引擎的web元素与chrome的Flash内元素竟然不同！ 用selenium可以完全操作chrome所有的元素，哦对了！selenium也可以自动开启Flash限制，要修改谷歌在本地的注册表而后强制开启，pyqt5的web引擎就简单了 一行代码就可以搞定。</li>
<li>其中pyqt5的打包是真的恶心至极，搞了5个小时左右才成功打包完成，打包后的内容也极其庞大 差不多100M，在一般个人电脑上运行是没问题的，在win系列的服务器上就各种报错，目前也没有解决。</li>
<li>最新版本的pyqt5不包括WebEngine，需要单独下载,我个人建议是别使用pyside2来写qt 主要是因为执行js没有回调,这原因也不知道为什么,但是在pyqt5上就没问题，而且在我本机上使用pyside2的tools工具汉化是有问题的….. 下面是按照pyqt5，tools会下载设计者工具(拖拽组件实时查看)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install PyQtWebEngine -i https://pypi.douban.com/simple</span><br><span class="line">pip install PyQt5==5.13.1 -i https://pypi.douban.com/simple</span><br><span class="line">pip install pyqt5-tools -i https://pypi.douban.com/simple</span><br></pre></td></tr></table></figure>

<ul>
<li>坑嘛 入了不少，GUI的多线程任务定时等等也是费了一天功夫才搞明白,抽奖操作直接发js,送礼物直接请求……. 下面是程序代码， 文章末尾有成品链接。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on 2019年12月27日</span></span><br><span class="line"><span class="string">@author: 包子</span></span><br><span class="line"><span class="string">@site: http://www.wxiptest.com</span></span><br><span class="line"><span class="string">@email: 2775617031@qq.com</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QMainWindow, QApplication</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> QThread,pyqtSignal,QTimer,QUrl</span><br><span class="line"><span class="keyword">from</span> PyQt5.uic <span class="keyword">import</span> loadUi</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWebEngineWidgets <span class="keyword">import</span> QWebEngineProfile, QWebEngineSettings, QWebEngineView</span><br><span class="line"><span class="keyword">from</span> apscheduler.schedulers.blocking <span class="keyword">import</span> BlockingScheduler</span><br><span class="line"><span class="keyword">from</span> apscheduler.triggers.cron <span class="keyword">import</span> CronTrigger</span><br><span class="line"><span class="keyword">import</span> sys, requests, html, re, json, time</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂机线程</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkThread</span><span class="params">(QThread)</span>:</span></span><br><span class="line">    trigger = pyqtSignal(str,str)</span><br><span class="line"></span><br><span class="line">     <span class="comment"># 初始化调度方法 如果不添加这个就报错</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None)</span>:</span></span><br><span class="line">        super().__init__(parent=<span class="literal">None</span>)</span><br><span class="line">        self.scheduler = BlockingScheduler()</span><br><span class="line">    <span class="comment">#初始化线程</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__int__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(WorkThread, self).__init__()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 执行线程时候调用下面的方法</span></span><br><span class="line">        self.web_run()</span><br><span class="line">    <span class="comment"># 关闭驱动进程</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">exit_r</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.scheduler.remove_job(<span class="string">'exit'</span>)  <span class="comment"># 移除web_exit调度任务</span></span><br><span class="line">        <span class="comment"># 挂机结束时间 发出信号 跳转到指定页面</span></span><br><span class="line">        self.trigger.emit(<span class="string">'https://chushou.tv/livezone.htm'</span>)</span><br><span class="line">    <span class="comment"># 执行任务</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cookie_run</span><span class="params">(self, room,tmpH,tmpM)</span>:</span></span><br><span class="line">        trigger = CronTrigger(hour=int(tmpH), minute=int(tmpM))</span><br><span class="line">        self.scheduler.add_job(func=self.exit_r, trigger=trigger, id=<span class="string">'exit'</span>)</span><br><span class="line">        <span class="comment"># 向主线程发送信号 发出的是需要执行的房间 跳转到下面的room房间</span></span><br><span class="line">        url = <span class="string">'https://chushou.tv/room/&#123;&#125;.htm'</span>.format(room)</span><br><span class="line">        self.trigger.emit(url,str(room))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">web_run</span><span class="params">(self)</span>:</span></span><br><span class="line">        tim_text = self.read_tmp_text()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> tim_text:</span><br><span class="line">            startTim = <span class="string">f'<span class="subst">&#123;i[<span class="number">0</span>]&#125;</span>:<span class="subst">&#123;i[<span class="number">1</span>]&#125;</span>'</span></span><br><span class="line">            endTim = <span class="string">f'<span class="subst">&#123;i[<span class="number">3</span>]&#125;</span>:<span class="subst">&#123;i[<span class="number">4</span>]&#125;</span>'</span></span><br><span class="line">            <span class="comment"># 范围时间</span></span><br><span class="line">            d_time = datetime.strptime(str(datetime.now().date()) + startTim, <span class="string">'%Y-%m-%d%H:%M'</span>)  <span class="comment"># 开始时间</span></span><br><span class="line">            d_time1 = datetime.strptime(str(datetime.now().date()) + endTim, <span class="string">'%Y-%m-%d%H:%M'</span>)  <span class="comment"># 结束时间</span></span><br><span class="line">            n_time = datetime.now()  <span class="comment"># 当前时间</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 判断当前时间是否在范围时间内 如果不在就正常等待 在的话就直接执行</span></span><br><span class="line">            <span class="keyword">if</span> n_time &gt; d_time <span class="keyword">and</span> n_time &lt; d_time1:</span><br><span class="line">                self.cookie_run(i[<span class="number">2</span>], i[<span class="number">3</span>], i[<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 运行 打包的时候需要用CronTrigger对象</span></span><br><span class="line">            trigger = CronTrigger(hour=int(i[<span class="number">0</span>]), minute=int(i[<span class="number">1</span>]))</span><br><span class="line">            self.scheduler.add_job(func=self.cookie_run, args=(i[<span class="number">2</span>], i[<span class="number">3</span>], i[<span class="number">4</span>]), trigger=trigger)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 开始调度程序</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.scheduler.start()</span><br><span class="line">        <span class="keyword">except</span> (KeyboardInterrupt, SystemExit):</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read_tmp_text</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'时间.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            file = f.readlines()</span><br><span class="line">        li = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> file:</span><br><span class="line">            a = i.strip()</span><br><span class="line">            li.append(a.split(<span class="string">'-'</span>))</span><br><span class="line">        la = []</span><br><span class="line">        <span class="keyword">for</span> i1 <span class="keyword">in</span> li:</span><br><span class="line">            o = []</span><br><span class="line">            <span class="keyword">for</span> i2 <span class="keyword">in</span> i1:</span><br><span class="line">                a = i2.split(<span class="string">':'</span>)</span><br><span class="line">                <span class="keyword">for</span> i3 <span class="keyword">in</span> a:</span><br><span class="line">                    o.append(i3)</span><br><span class="line">            la.append(o)</span><br><span class="line">        <span class="keyword">return</span> la</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 移除所有调度任务</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_jobs</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.scheduler.remove_all_jobs()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 左键单击后打开的新窗口 M = WebEngineView</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">M</span><span class="params">(QWebEngineView)</span>:</span></span><br><span class="line">    windowList = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重写createwindow()</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">createWindow</span><span class="params">(self, QWebEnginePage_WebWindowType)</span>:</span></span><br><span class="line">        new_webview = M() <span class="comment"># 创建web视图对象</span></span><br><span class="line">        new_window = MainWindow() <span class="comment"># 创建主界面的对象</span></span><br><span class="line">        new_window.zy.setCentralWidget(new_webview) <span class="comment"># 调用主界面的方法</span></span><br><span class="line">        new_window.zy.show()</span><br><span class="line">        self.windowList.append(new_window)  <span class="comment"># 注：没有这句会崩溃！！！</span></span><br><span class="line">        <span class="keyword">return</span> new_webview</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主界面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainWindow</span><span class="params">(QMainWindow)</span>:</span></span><br><span class="line">    <span class="comment"># 在主线程中设置自定义的信号 这里主要是给子线程发送信号</span></span><br><span class="line">    signal_m = pyqtSignal()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,*args, **kwargs)</span>:</span></span><br><span class="line">        super(MainWindow, self).__init__(*args, **kwargs)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># # 图片加载</span></span><br><span class="line">        <span class="comment"># QWebEngineSettings.globalSettings().setAttribute(QWebEngineSettings.AutoLoadImages, False)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 执行onCookieAdd</span></span><br><span class="line">        QWebEngineProfile.defaultProfile().cookieStore().cookieAdded.connect(self.onCookieAdd)</span><br><span class="line">        self.cookies = &#123;&#125;  <span class="comment"># 存放cookie字典</span></span><br><span class="line"></span><br><span class="line">        self.ui = loadUi(<span class="string">'chushou.ui'</span>)  <span class="comment"># 之后控件都在ui下使用</span></span><br><span class="line">        <span class="comment"># 设置窗口标题为启动时间</span></span><br><span class="line">        self.ui.setWindowTitle(<span class="string">'程序启动时间:'</span>+str(time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>,time.localtime()))+<span class="string">' by:包子'</span>)</span><br><span class="line">        <span class="comment"># 设置透明度 # 0到1，1表示不透明，0表示完全透明</span></span><br><span class="line">        self.ui.setWindowOpacity(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># # 设置窗口背景色</span></span><br><span class="line">        <span class="comment"># self.ui.setStyleSheet("background-color: white")</span></span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'时间.txt'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            self.ui.textEdit_2.setText(f.read())</span><br><span class="line">        tmp = str(time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime())) + <span class="string">' [欢迎使用自动挂机程序 任务开始前请登录触手TV]'</span></span><br><span class="line">        self.ui.listWidget.addItem(tmp)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 另外的小窗口 用于登录用的 或打开其他链接</span></span><br><span class="line">        self.zy = loadUi(<span class="string">'zy.ui'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 设置窗体禁止拖拽 保持初始的固定大小</span></span><br><span class="line">        self.ui.setFixedSize(self.ui.width(), self.ui.height())</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 开启Flash权限</span></span><br><span class="line">        settings = QWebEngineSettings.globalSettings()</span><br><span class="line">        settings.setAttribute(QWebEngineSettings.PluginsEnabled, <span class="literal">True</span>) <span class="comment"># 开启插件 支持flash</span></span><br><span class="line">        settings.setAttribute(QWebEngineSettings.WebGLEnabled, <span class="literal">True</span>) <span class="comment"># 开启h5</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 调用重写的WebEngineView类 这样点击页面链接时候会弹出来小窗口</span></span><br><span class="line">        self.browser = M()</span><br><span class="line">        self.browser.load(QUrl(<span class="string">'https://chushou.tv/livezone.htm'</span>))</span><br><span class="line">        self.ui.out1.addWidget(self.browser)  <span class="comment"># 主窗口布局中显示web</span></span><br><span class="line"></span><br><span class="line">        self.timer = QTimer()  <span class="comment"># 检查房间任务</span></span><br><span class="line">        self.timer2 = QTimer()  <span class="comment"># 检测抽奖</span></span><br><span class="line">        self.js_web = QTimer()  <span class="comment"># 替换页面元素定时器</span></span><br><span class="line">        self.video = QTimer()  <span class="comment"># 切换标清</span></span><br><span class="line"></span><br><span class="line">        self.web_refresh = QTimer() <span class="comment"># 定时刷新房间url</span></span><br><span class="line">        self.ui.pushButton_4.clicked.connect(self.room_id_reload)  <span class="comment"># 进入房间</span></span><br><span class="line">        self.timer.timeout.connect(self.get_room)  <span class="comment"># 检查房间任务</span></span><br><span class="line">        self.timer2.timeout.connect(self.lottery)  <span class="comment"># 检测抽奖</span></span><br><span class="line">        self.web_refresh.timeout.connect(self.refresh_web) <span class="comment"># 发送到槽refresh函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定时替换页面顶部元素</span></span><br><span class="line">        self.js_web.timeout.connect(self.js_web_re)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 保存挂机文本</span></span><br><span class="line">        self.ui.saveB.clicked.connect(self.save_text)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        self.ui.pushButton.clicked.connect(self.thread_work) <span class="comment"># 点击开始挂机按钮启动thread_work函数 调用多线程</span></span><br><span class="line">        self.ui.pushButton_2.clicked.connect(self.t_stop)  <span class="comment"># 停止所有任务</span></span><br><span class="line">    <span class="comment"># 保存挂机文本内容</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_text</span><span class="params">(self)</span>:</span></span><br><span class="line">        gj_f = self.ui.textEdit_2.toPlainText()</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'时间.txt'</span>,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(gj_f)</span><br><span class="line">        js = <span class="string">'''</span></span><br><span class="line"><span class="string">        function a()&#123;</span></span><br><span class="line"><span class="string">        return alert("已保存挂机时间!");</span></span><br><span class="line"><span class="string">        &#125;a();</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        self.browser.page().runJavaScript(js)</span><br><span class="line">        tmp = str(time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime())) + <span class="string">' [修改并保存挂机设置]'</span></span><br><span class="line"></span><br><span class="line">        self.ui.listWidget.addItem(tmp)</span><br><span class="line">    <span class="comment"># 处理cookie添加的事件</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onCookieAdd</span><span class="params">(self, cookie)</span>:</span></span><br><span class="line">        name = cookie.name().data().decode(<span class="string">'utf-8'</span>)  </span><br><span class="line">        value = cookie.value().data().decode(<span class="string">'utf-8'</span>)  <span class="comment"># 先获取cookie值，再把编码处理一下</span></span><br><span class="line">        self.cookies[name] = value  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取cookie</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_cookie</span><span class="params">(self)</span>:</span></span><br><span class="line">        cookie_str = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> self.cookies.items():  <span class="comment"># 遍历字典</span></span><br><span class="line">            cookie_str += (key + <span class="string">'='</span> + value + <span class="string">';'</span>)  <span class="comment"># 将键值对拿出来拼接一下</span></span><br><span class="line">        <span class="keyword">return</span> cookie_str  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 多线程启用的函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">thread_work</span><span class="params">(self)</span>:</span></span><br><span class="line">        tmp = str(time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime())) + <span class="string">' [任务开始]'</span></span><br><span class="line"></span><br><span class="line">        self.ui.listWidget.addItem(tmp)</span><br><span class="line">        self.ui.saveB.setEnabled(<span class="literal">False</span>)  <span class="comment"># 保存挂机文本的按钮</span></span><br><span class="line">        self.ui.lineEdit.setEnabled(<span class="literal">False</span>)<span class="comment"># 页面设定文本框</span></span><br><span class="line">        self.ui.lineEdit_2.setEnabled(<span class="literal">False</span>) <span class="comment"># 房间检测文本框</span></span><br><span class="line">        self.ui.lineEdit_3.setEnabled(<span class="literal">False</span>) <span class="comment"># 抽奖按钮</span></span><br><span class="line">        self.ui.textEdit_2.setEnabled(<span class="literal">False</span>) <span class="comment"># 设置定时挂机文本框</span></span><br><span class="line">        self.ui.pushButton_4.setEnabled(<span class="literal">False</span>) <span class="comment"># 房间进入按钮</span></span><br><span class="line">        self.ui.lineEdit_4.setEnabled(<span class="literal">False</span>) <span class="comment"># 房间进入文本框</span></span><br><span class="line">        self.ui.checkBox.setEnabled(<span class="literal">False</span>) <span class="comment"># 抽奖是否开启选择框</span></span><br><span class="line">        self.ui.checkBox_2.setEnabled(<span class="literal">False</span>) <span class="comment"># 小心心选择框</span></span><br><span class="line">        <span class="comment"># self.ui.checkBox_3.setEnabled(False) # 欢迎入场选择框</span></span><br><span class="line">        self.ui.pushButton.setEnabled(<span class="literal">False</span>) <span class="comment"># 开始任务按钮</span></span><br><span class="line">        self.ui.pushButton_2.setEnabled(<span class="literal">True</span>)  <span class="comment"># 结束任务按钮</span></span><br><span class="line"></span><br><span class="line">        self.workThread = WorkThread()</span><br><span class="line">        self.workThread.start()</span><br><span class="line">        self.workThread.trigger.connect(self.thread_dy) <span class="comment"># 用子线程的trigger属性触发thread_dy方法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 停止多线程</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">t_stop</span><span class="params">(self)</span>:</span></span><br><span class="line">        tmp = str(time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime())) + <span class="string">' [已停止任务]'</span></span><br><span class="line"></span><br><span class="line">        self.ui.listWidget.addItem(tmp)</span><br><span class="line">        self.workThread.remove_jobs() <span class="comment"># 删除子线程的所有调度任务</span></span><br><span class="line">        self.ui.saveB.setEnabled(<span class="literal">True</span>) <span class="comment"># 保存挂机文本的按钮</span></span><br><span class="line">        self.ui.lineEdit.setEnabled(<span class="literal">True</span>)  <span class="comment"># 页面设定文本框</span></span><br><span class="line">        self.ui.lineEdit_2.setEnabled(<span class="literal">True</span>)  <span class="comment"># 房间检测文本框</span></span><br><span class="line">        self.ui.lineEdit_3.setEnabled(<span class="literal">True</span>)  <span class="comment"># 抽奖按钮</span></span><br><span class="line">        self.ui.textEdit_2.setEnabled(<span class="literal">True</span>)  <span class="comment"># 设置定时挂机文本框</span></span><br><span class="line">        self.ui.pushButton_4.setEnabled(<span class="literal">True</span>)  <span class="comment"># 房间进入按钮</span></span><br><span class="line">        self.ui.lineEdit_4.setEnabled(<span class="literal">True</span>)  <span class="comment"># 房间进入文本框</span></span><br><span class="line">        self.ui.checkBox.setEnabled(<span class="literal">True</span>)  <span class="comment"># 抽奖是否开启选择框</span></span><br><span class="line">        self.ui.checkBox_2.setEnabled(<span class="literal">True</span>)  <span class="comment"># 小心心选择框</span></span><br><span class="line">        <span class="comment"># self.ui.checkBox_3.setEnabled(False)  # 欢迎入场选择框</span></span><br><span class="line">        self.ui.pushButton.setEnabled(<span class="literal">True</span>)  <span class="comment"># 开始任务按钮</span></span><br><span class="line">        self.ui.pushButton_2.setEnabled(<span class="literal">False</span>)  <span class="comment"># 结束任务按钮</span></span><br><span class="line">        self.timer.stop()  <span class="comment"># 房间检测停止</span></span><br><span class="line">        self.web_refresh.stop()  <span class="comment"># 刷新停止</span></span><br><span class="line">        <span class="comment"># 查看抽奖复选框是否被选中 为真就执行</span></span><br><span class="line">        fbox = self.ui.checkBox.isChecked()</span><br><span class="line">        <span class="keyword">if</span> fbox:</span><br><span class="line">            self.timer2.stop()  <span class="comment"># 抽奖定时停止</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 子线程返回的内容输出在这里</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">thread_dy</span><span class="params">(self,url,room)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> url == <span class="string">'https://chushou.tv/livezone.htm'</span>: <span class="comment"># 任务闲置时候将停止抽奖任务或者房间检测</span></span><br><span class="line">            self.browser.page().load(QUrl(url))</span><br><span class="line">            self.ui.out1.addWidget(self.browser)</span><br><span class="line">            <span class="comment"># self.js_web.start(2000)  # 开启页面元素替换定制</span></span><br><span class="line">            self.timer2.stop()  <span class="comment"># 抽奖定时停止</span></span><br><span class="line">            self.timer.stop()  <span class="comment"># 房间检测停止</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.browser.page().load(QUrl(url))</span><br><span class="line">            self.ui.out1.addWidget(self.browser)</span><br><span class="line">            self.js_web.start(<span class="number">2000</span>) <span class="comment"># 开启页面元素替换定制</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 房间检测定时 从文本中获取数值</span></span><br><span class="line">            time_t1 = self.ui.lineEdit_2.text()</span><br><span class="line">            rt1 = int(time_t1) * <span class="number">1000</span></span><br><span class="line">            self.timer.start(rt1)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 查看抽奖复选框是否被选中 为真就执行</span></span><br><span class="line">            fbox = self.ui.checkBox.isChecked()</span><br><span class="line">            <span class="keyword">if</span> fbox:</span><br><span class="line">                <span class="comment"># 启用定时任务lottery</span></span><br><span class="line">                time_t2 = self.ui.lineEdit_3.text()</span><br><span class="line">                rt2 = int(time_t2) * <span class="number">1000</span></span><br><span class="line">                self.timer2.start(rt2)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 检查送礼物框是否被选中  小心心</span></span><br><span class="line">            xx_box = self.ui.checkBox_2.isChecked()</span><br><span class="line">            <span class="keyword">if</span> xx_box:</span><br><span class="line">                cookie = self.get_cookie()</span><br><span class="line">                ua = <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36'</span></span><br><span class="line">                headers = &#123;</span><br><span class="line">                    <span class="string">'user-agent'</span>: ua,</span><br><span class="line">                    <span class="string">'cookie'</span>: cookie</span><br><span class="line">                &#125;</span><br><span class="line">                device = <span class="string">'WHJMrwNw1k/FLSoPdPLfXCIE0PMONrML7Zj2HUH+IjxjWEZFacpAP0XMELsE451oYb8onkxXb6Iembn5aAt1u8d3FkK6Tw31zot7UPqD/THUlU6kzcB21yQ/GllaqVP3BvWdC0QQex8gFHjDDDjKLreYPhhoSQZbvzZgTvbtY80EkHzaXlGXLfABZekwPW2Lt8Op5NbVgDOU2bCBM9cOgFUhS9qgw1ZilVavvSgv28gyn83AWxXi6J3QltbZXcg85LL4jR37UvaKQVtjWZGHAUk0MwWQLnbQc1487582755342'</span></span><br><span class="line"></span><br><span class="line">                xxx = requests.get(<span class="string">'https://chushou.tv/'</span>, headers=headers)</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    dataName = re.findall(<span class="string">'data-nicename="(.*?)"'</span>, xxx.text)</span><br><span class="line">                    dataToken = re.findall(<span class="string">'data-token="(.*?)"'</span>, xxx.text)</span><br><span class="line">                    user = html.unescape(dataName[<span class="number">0</span>])  <span class="comment"># 用户名</span></span><br><span class="line">                <span class="keyword">except</span> IndexError:</span><br><span class="line">                    info = str(time.strftime(<span class="string">'%Y-%M-%M %H:%M:%S'</span>,time.localtime()))+<span class="string">' [请先登录账号在开始运行]'</span></span><br><span class="line">                    self.ui.listWidget.addItem(info)</span><br><span class="line">                    self.js_web.stop()</span><br><span class="line">                    self.t_stop()</span><br><span class="line">                    self.browser.page().load(QUrl(<span class="string">'https://chushou.tv/livezone.htm'</span>))</span><br><span class="line">                    self.ui.out1.addWidget(self.browser)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 发送小礼物</span></span><br><span class="line">                    xx_data = &#123;</span><br><span class="line">                        <span class="string">'count'</span>: <span class="string">'1'</span>,</span><br><span class="line">                        <span class="string">'primaryKey'</span>: <span class="string">'120'</span>,</span><br><span class="line">                        <span class="string">'targetKey'</span>: room,</span><br><span class="line">                        <span class="string">'_listKey'</span>: <span class="string">'null'</span>,</span><br><span class="line">                        <span class="string">'type'</span>: <span class="string">'1'</span>,</span><br><span class="line">                        <span class="string">'_sas'</span>: <span class="string">'1000'</span>,</span><br><span class="line">                        <span class="string">'token'</span>: dataToken,</span><br><span class="line">                        <span class="string">'device_stoken'</span>: device</span><br><span class="line">                    &#125;</span><br><span class="line">                    xxx = requests.post(<span class="string">'https://chushou.tv/room-pocket/consume.htm'</span>, data=xx_data,headers=headers).json()</span><br><span class="line">                    <span class="keyword">if</span> xxx[<span class="string">'code'</span>] == <span class="number">404</span>:</span><br><span class="line">                        info = str(time.strftime(<span class="string">'%Y-%M-%M %H:%M:%S'</span>, time.localtime())) + <span class="string">' 房间:['</span>+room+<span class="string">'][没有小心心可发送]'</span></span><br><span class="line">                        self.ui.listWidget.addItem(info)</span><br><span class="line">                    <span class="keyword">elif</span> xxx[<span class="string">'code'</span>] == <span class="number">401</span>:</span><br><span class="line">                        print(xxx,<span class="string">'未登录'</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="comment"># 发送小心心</span></span><br><span class="line">                        info = str(time.strftime(<span class="string">'%Y-%M-%M %H:%M:%S'</span>, time.localtime())) + <span class="string">' 房间:['</span>+room+<span class="string">'][已发送小心心]'</span></span><br><span class="line">                        self.ui.listWidget.addItem(info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 启用URL定时刷新</span></span><br><span class="line">            time_t3 = self.ui.lineEdit.text()</span><br><span class="line">            rt3 = int(time_t3) * <span class="number">1000</span></span><br><span class="line">            self.web_refresh.start(rt3)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 刷新房间</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">refresh_web</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.browser.reload()</span><br><span class="line">        self.js_web.start(<span class="number">2000</span>)  <span class="comment"># 开启页面元素替换定制</span></span><br><span class="line">    <span class="comment"># 替换页面元素</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">js_web_re</span><span class="params">(self)</span>:</span></span><br><span class="line">        js_hide = <span class="string">'''</span></span><br><span class="line"><span class="string">                    function a()&#123;</span></span><br><span class="line"><span class="string">                        var htm = '&lt;center&gt;&lt;h2&gt;测试版触手挂机程序 有问题也不改 再见&lt;/h2&gt;&lt;/center&gt;';</span></span><br><span class="line"><span class="string">                        var s = document.querySelector("body &gt; div.cs_header &gt; div.cs_left").innerText;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                        if(s == '测试版触手挂机程序 有问题也不改 再见')&#123;</span></span><br><span class="line"><span class="string">                            return 'y';</span></span><br><span class="line"><span class="string">                        &#125;else&#123;</span></span><br><span class="line"><span class="string">                            document.querySelector("#room_chat_ul &gt; li.firstRemend &gt; span.zb_userwords.noticeWords").innerText='使用本程序出现未知BUG,请点击蓝色按钮扫码添加好友'</span></span><br><span class="line"><span class="string">                            document.querySelector("body &gt; div.cs_header &gt; div.cs_left").innerHTML=htm;</span></span><br><span class="line"><span class="string">                            document.querySelector("#theaterModeContainer &gt; div.live-room-giftbar &gt; div.room-giftbar-info &gt; div.giftbar-info-category").hidden=true;</span></span><br><span class="line"><span class="string">                            document.querySelector("#rightBlock &gt; div.roomOnline.roomOnlineStyle0 &gt; div.room-activity &gt; div").hidden=true;</span></span><br><span class="line"><span class="string">                            document.querySelector("#liveBlockContainer &gt; div.live-room-main &gt; div.live-room-left &gt; div.live-room-nav &gt; div &gt; div.nav-baseinfo-column &gt; div").hidden=true;</span></span><br><span class="line"><span class="string">                            document.querySelector("#roomLeftNav").hidden=true;</span></span><br><span class="line"><span class="string">                            document.querySelector("#theaterModeContainer &gt; div.live-room-giftbar &gt; div.room-giftbar-info &gt; div.giftbar-info-list").hidden=true;</span></span><br><span class="line"><span class="string">                            //document.querySelector("#anchorvideo").hidden=true;</span></span><br><span class="line"><span class="string">                            document.querySelector("#otheranchor").hidden=true;</span></span><br><span class="line"><span class="string">                            document.querySelector("#liveBlockContainer &gt; div.live-room-main &gt; div.live-room-left &gt; div.live-room-nav &gt; div &gt; div.nav-title-column.nav-title-column-anchor &gt; div.nav-title-operate &gt; a").innerText='By:包子';</span></span><br><span class="line"><span class="string">                            document.querySelector("#liveBlockContainer &gt; div.live-room-main &gt; div.live-room-left &gt; div.live-room-nav &gt; div &gt; div.nav-title-column.nav-title-column-anchor &gt; div.nav-title-operate &gt; a").href='http://i1.fuimg.com/706520/0d92d24fd9fa187d.jpg';</span></span><br><span class="line"><span class="string">                            document.querySelector("#anchorvideo").hidden=true;</span></span><br><span class="line"><span class="string">                            return 'n';</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                    a();</span></span><br><span class="line"><span class="string">                '''</span></span><br><span class="line">        self.browser.page().runJavaScript(js_hide, self.js_web_call)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断元素替换 已经替换就停止替换元素的定时任务</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">js_web_call</span><span class="params">(self, a)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> str(a) == <span class="string">'y'</span>:</span><br><span class="line">            self.js_web.stop()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 进入房间</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">room_id_reload</span><span class="params">(self)</span>:</span></span><br><span class="line">        roomID = self.ui.lineEdit_4.text()</span><br><span class="line">        url = <span class="string">'https://chushou.tv/room/&#123;&#125;.htm'</span>.format(roomID)</span><br><span class="line">        self.browser.page().load(QUrl(url))</span><br><span class="line">        self.ui.out1.addWidget(self.browser)</span><br><span class="line">        self.js_web.start(<span class="number">2000</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_room</span><span class="params">(self)</span>:</span></span><br><span class="line">        js_str = <span class="string">'''</span></span><br><span class="line"><span class="string">                    function a()&#123;</span></span><br><span class="line"><span class="string">                        return document.querySelector("#liveBlockContainer &gt; div.live-room-main.min-room-width &gt; div.live-room-left &gt; div.live-room-nav &gt; div &gt; div.nav-baseinfo-column &gt; p.room-anchor-roomid").textContent;</span></span><br><span class="line"><span class="string">                    &#125;a();'''</span></span><br><span class="line">        self.browser.page().runJavaScript(js_str, self.js_callback_room)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 接收js返回值 房间</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">js_callback_room</span><span class="params">(self, a)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> a:</span><br><span class="line">            tmp = str(time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime())) + <span class="string">' [当前挂机房间:'</span> + a+<span class="string">']'</span></span><br><span class="line">            self.ui.listWidget.addItem(tmp)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tmp = str(time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime())) + <span class="string">' [主播已下线 未直播]'</span></span><br><span class="line">            self.ui.listWidget.addItem(tmp)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 抽奖</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lottery</span><span class="params">(self)</span>:</span></span><br><span class="line">        js = <span class="string">'''</span></span><br><span class="line"><span class="string">                function a()&#123;</span></span><br><span class="line"><span class="string">                        // 直接在主页面执行js 操作iframe 点击抽奖按钮</span></span><br><span class="line"><span class="string">                        document.getElementById('lotteryFrame').contentWindow.document.getElementById('lottery_btn').click();</span></span><br><span class="line"><span class="string">                    &#125;a();</span></span><br><span class="line"><span class="string">                '''</span></span><br><span class="line">        self.browser.page().runJavaScript(js)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    stats = MainWindow()  <span class="comment"># 调用show方法 打开窗口</span></span><br><span class="line">    stats.ui.show()</span><br><span class="line">    sys.exit(app.exec_())  <span class="comment"># 调用sys库的exit退出方法，条件是app.exec_()也就是整个窗口关闭</span></span><br></pre></td></tr></table></figure>

<ul>
<li>下载地址 <span class="exturl" data-url="aHR0cHM6Ly9zaGFyZS53ZWl5dW4uY29tLzVLVFlBQWY=" title="https://share.weiyun.com/5KTYAAf">https://share.weiyun.com/5KTYAAf<i class="fa fa-external-link"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>pyqt5</category>
      </categories>
      <tags>
        <tag>触手自动挂机</tag>
      </tags>
  </entry>
  <entry>
    <title>强制获取ip(对方不用点击链接)</title>
    <url>/2020/01/09/wxip/</url>
    <content><![CDATA[<h2 id="2018年中旬就已经发布在CSDN上-之后修改重新发布-提示有敏感词-如今就记录在此博客中。"><a href="#2018年中旬就已经发布在CSDN上-之后修改重新发布-提示有敏感词-如今就记录在此博客中。" class="headerlink" title="2018年中旬就已经发布在CSDN上 之后修改重新发布 提示有敏感词.. 如今就记录在此博客中。"></a>2018年中旬就已经发布在CSDN上 之后修改重新发布 提示有敏感词.. 如今就记录在此博客中。</h2><h3 id="强制获取ip不仅限于QQ-群-微信-群-支付宝-论坛-博客等"><a href="#强制获取ip不仅限于QQ-群-微信-群-支付宝-论坛-博客等" class="headerlink" title="强制获取ip不仅限于QQ(群) 微信(群) 支付宝 论坛 博客等"></a>强制获取ip不仅限于QQ(群) 微信(群) 支付宝 论坛 博客等</h3><hr>
<p>网站后台记录对方基本的浏览器信息和ip地址，不过此方法并不需要对方打开链接，即可记录ip。<br>其原理就是利用图片外链获取访客基本的IP与UA信息。</p>
<a id="more"></a>
<p>获取到的ip有部分几率可以获知对方真实所在的城市，ip很难做得到精准定位，除非此ip是固定的独立ip(一般都是企业)。</p>
<p>介绍几个 IP高精度定位网址:</p>
<p>埃文科技 <span class="exturl" data-url="aHR0cHM6Ly93d3cuaXBwbHVzMzYwLmNvbS8=" title="https://www.ipplus360.com/">https://www.ipplus360.com/<i class="fa fa-external-link"></i></span><br>目前发现每天可以使用公安版高精度查询服务一次，比较不错的。</p>
<p>遇见仓库 <span class="exturl" data-url="aHR0cHM6Ly9tZXQucmVkL2gvdG9vbHMvcXVlcnlJcA==" title="https://met.red/h/tools/queryIp">https://met.red/h/tools/queryIp<i class="fa fa-external-link"></i></span><br>现在用的最多的就是这个</p>
<p>查IPIP <span class="exturl" data-url="aHR0cHM6Ly93d3cuaXBpcC5uZXQvaXAuaHRtbA==" title="https://www.ipip.net/ip.html">https://www.ipip.net/ip.html<i class="fa fa-external-link"></i></span></p>
<p>GPS经纬度查询 <span class="exturl" data-url="aHR0cDovL3d3dy5ncHNzcGcuY29tL21hcHMuaHRt" title="http://www.gpsspg.com/maps.htm">http://www.gpsspg.com/maps.htm<i class="fa fa-external-link"></i></span></p>
<p>源码在此处</p>
<ol>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OS9hcnRpY2xlL2RldGFpbHMvOTk2NzU3MzU=" title="https://blog.csdn.net/weixin_43293899/article/details/99675735">点击打开<i class="fa fa-external-link"></i></span></p>
<p>  另类使用方法可以<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OS9hcnRpY2xlL2RldGFpbHMvODM4NjIzNzE=" title="https://blog.csdn.net/weixin_43293899/article/details/83862371">看看这里<i class="fa fa-external-link"></i></span><img src="https://img-blog.csdnimg.cn/20190519225413122.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="链接生成与查询界面"><br><img src="https://img-blog.csdnimg.cn/20190519225907333.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>获取方法   ↓↓↓ 如图:</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20190519230618487.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
</ol>
<p>2.经纬度<br>说明:对方打开链接会弹出是否授权位置，对方授权后即可获取到GP, 如果拒绝的话获取的是IP转换的经纬度（不准）,qq内置浏览器内打开会获取不到GPS，pc端也获取不到，微信内置可获取 其他浏览器自行测试，利用的是百度与谷歌地图的API,有兴趣的小伙伴可以自己利用。<br><img src="https://img-blog.csdnimg.cn/20190519231016563.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="经纬度界面"><br><img src="https://img-blog.csdnimg.cn/20190519232533876.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190519233140893.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3.邮箱<br>说明:网站页面上有说明 ，qq邮箱和163都可以获取到 其他邮箱自行测试。<br><img src="https://img-blog.csdnimg.cn/20190519233603419.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190519233909680.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI5Mzg5OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="QQ获取ip（空间-好友-群。-都可以）"><a href="#QQ获取ip（空间-好友-群。-都可以）" class="headerlink" title="QQ获取ip（空间,好友,群。 都可以）"></a>QQ获取ip（空间,好友,群。 都可以）</h2><p>1.方法：<br>    将生成的链接发送到手机QQ中的我的设备上， 在手机QQ中打开链接 ，而后点击右上角的转发,转发给目标即完成操作，等待几秒钟后返回网站查询结果。</p>
<pre><code>技巧！ 不管qq还是微信,先跟对方正常聊天,然后不经意间就发送xml链接 ，然后在快速撤回此消息即可，qq与微信都可以修改xml 以便更隐蔽的获取对方来源，</code></pre><h2 id="在说一下关于获取对方ip的事情"><a href="#在说一下关于获取对方ip的事情" class="headerlink" title="在说一下关于获取对方ip的事情"></a>在说一下关于获取对方ip的事情</h2><p>之前也一直咨询网上的律师，有说违法的 也有说不属于违法的(一脸懵逼！！)，我个人觉得用ip来找一个人实在是很扯淡，除非是警察，或者对方的ip是固定ip还比较容易定位的到，现在大多数人都是4G网 大王卡之类的(腾讯大王卡的话 你就是在月球 定位到的ip还是深圳)，很多宽带服务商的服务器还都是异地搭建，你查到的也只能是异地ip，想用ip来定位 纯属看运气，当然了 获取ip的方法也各式各样，抓取流量数据包， 还有一些带某些插件的QQ，总之吧  这东西就是在法律边缘疯狂试探，用的好呢 甚至可以救人，在就是被一些别有用心的人利用来干坏事 ，具体能干啥坏事我也不知道…..<br>再次套用下某人的一句话:<br>    <img src="https://img-blog.csdnimg.cn/2019051923550894.jpg" alt="在这里插入图片描述"></p>
<h2 id="源码下载地址-https-download-csdn-net-download-weixin-43293899-11569320"><a href="#源码下载地址-https-download-csdn-net-download-weixin-43293899-11569320" class="headerlink" title="源码下载地址 https://download.csdn.net/download/weixin_43293899/11569320"></a>源码下载地址 <span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC5jc2RuLm5ldC9kb3dubG9hZC93ZWl4aW5fNDMyOTM4OTkvMTE1NjkzMjA=" title="https://download.csdn.net/download/weixin_43293899/11569320">https://download.csdn.net/download/weixin_43293899/11569320<i class="fa fa-external-link"></i></span></h2>]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>ip探测</tag>
      </tags>
  </entry>
</search>
